@using Microsoft.AspNetCore.Identity
@inject SignInManager<BlogUser> SignInManager
@inject UserManager<BlogUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        //create a var that stores an instance of mu user record and then refernce the Di
        var user = await UserManager.GetUserAsync(User);

        <li class="nav-item">
            <a  class="nav-link" 
               asp-area="Identity" 
               asp-page="/Account/Manage/Index" title="Manage">Hello @user.FullName
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" 
               asp-area="Identity"
               asp-page="/Account/Logout" > Logout</a>
            @*<form  class="form-inline" 
                  asp-area="Identity" 
                  asp-page="/Account/Logout" 
                  asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button  type="submit"  class="nav-link btn btn-link text-light">Logout</button>
            </form>*@
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link" 
               asp-area="Identity" 
               asp-page="/Account/Register">Register
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" 
               asp-area="Identity" 
               asp-page="/Account/Login">Login
            </a>
        </li>
    }
</ul>
